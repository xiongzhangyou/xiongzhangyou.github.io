<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu笔记</title>
      <link href="/2024/07/29/Ubuntu%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/07/29/Ubuntu%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>一、Ubuntu终端操作<br>打开终端进行命令行操作</p><p>二、Shell命令<br>1、目录信息查看命令ls</p><pre><code>   ls -a 显示目录所有文件及文件夹，包括隐藏文件，比如以.开头的</code></pre><p>2、目录切换命令cd</p><p>3、当前路径显示命令pwd</p><p>4、系统信息查看命令uname</p><p>5、清理屏幕命令clear</p><p>6、显示文件内容命令cat</p><p>7、切换用户身份命令sudo</p><p>8、文件拷贝命令cp</p><p>9、切换用户命令su</p><p>10、移动文件命令mv</p><p>11、创建文件夹命令mkdir</p><p>12、创建文件命令touch</p><p>13、删除命令rm</p><p>14、目录删除命令rmdir</p><p>15、显示网络配置信息命令ifconfig</p><p>16、重启命令reboot</p><p>17、关机命令poweroff</p><p>18、系统帮助命令man</p><p>19、数据同步写入磁盘命令sync</p><p>20、查找文件命令find</p><p>21、查找内容命令grep</p><p>22、文件夹大小查看命令du</p><p>23、磁盘空间检查命令df</p><p>24、使用gedit打开某个文件命令gedit</p><p>25、当前的系统进程查看命令ps</p><p>26、进程实时运行状态查看命令top</p><p>27、文件类型查看命令file</p><p>三、Ubuntu软件安装方法<br>1、通过APP Store安装<br>使用apt工具安装软件，需要sudo，也就是root权限。</p><p>2、使用APT工具安装（最多）<br>使用apt包管理工具，apt可以自动下载，配置，安装。</p><p>3、deb软件包安装<br>使用dpkg命令安装deb软件包，命令如下：</p><p>sudo dpkg -i xxxx.deb</p><pre><code>   在windows下，我们安装的是.exe文件，在Ubuntu就有一个.deb。</code></pre><p>4、自己下载程序源码编译安装<br>Make</p><pre><code>    之后Make install</code></pre><p>五、根目录“/”<br>Linux下“/”就是根目录！所有的目录都是由根目录衍生出来的。</p><p>六、Ubuntu文件系统结构<br>/bin       存放二进制可执行文件，这些命令在单用户模式下也能够使用。可以被root和一般的账号使用。</p><pre><code>    /boot     Ubuntu内核和启动文件，比如vmlinuz-xxx。gurb引导装载程序。    /dev       设备驱动文件    /etc        存放一些系统配置文件，比如用户账号和密码文件，各种服务的起始地址。   /home    系统默认的用户主文件夹，一般创建用户账户的时候，默认的用户主文件夹都会放到此目录下。   /lib         存放库文件   /media   此目录下放置可插拔设备，比如SD卡，或者U盘就是挂载到这个目录中。    /mnt      用户可使用的挂载点，如果要挂载一些额外的设备，那么就可以挂载到此处。    /opt       可选的文件和程序存放目录，给第三方软件放置的目录。    /root      root用户目录，也就是系统管理员目录。   /sbin      和/bin类似，也是存放一些二进制可执行文件。sbin下面的一般是系统开机过程中所需要的命令。   /srv        服务相关目录。比如网络服务。   /sys        记录内核信息，虚拟文件系统。   /tmp      临时目录   /var        存放一些变化的文件，比如日志文件   /usr        usr不是user的缩写，而是UNIX Software Resource的缩写，存放于系统用户有关的文件，会占用很大的存储空间！   /proc      虚拟文件系统，数据放置到内存中，存放系统运行信息</code></pre><p>七、绝对路径和相对路径<br>绝对路径：从根目录“/”算起的路径。</p><pre><code>   相对路径：相对于目前路径的文件名写法，比如./home/zzk。不是以“/”开头的就行。   “.”代表当前路径，也可以 用“./”表示   “..”代表上一层目录，也可以用“../”表示</code></pre><p>八、Ubuntu磁盘文件<br>/dev/sd*文件，此类文件是磁盘设备文件，并不能直接访问磁盘，必须要将磁盘挂载到某一个目录下才可以访问。</p><pre><code>   sd开头的有U盘的设备文件，找出U盘的文件   假设/dev/sdb表示U盘，则/dev/sdb1表示U盘的第一个分区。</code></pre><p>九、磁盘和目录的容量查询命令<br>df：列出文件系统的整体磁盘使用量。主要查看个文件系统的使用量，</p><pre><code>   du:评估文件系统的磁盘使用量，主要查看单个文件的大小。</code></pre><p>十、磁盘挂载与卸载，分区和格式化、<br>1、磁盘的挂载和卸载<br>mount和umount命令</p><p>2、磁盘分区<br>fdisk命令</p><pre><code>    分区1大小为1G，1GB=1024*1024*1024=1073741824 B/512 B=2097152扇区</code></pre><p>3、磁盘格式化</p><pre><code>   磁盘分区创建好以后就可以格式化磁盘，使用命令mkfs。如：</code></pre><p>mkfs -t vfat /dev/sdx</p><pre><code>   vfat是文件系统类型，这样格完后，windows linux 默认都认识</code></pre><p>十一、Linux下常用的压缩格式<br>Linux下常用的压缩扩展名有：.tar、.tar.bz2、.tar.gz。</p><p>十二、Windows下7ZIP软件的安装<br>因为Linux下很多文件是.bz2，.gz结尾的压缩文件，因此需要在windows下安装7ZIP软件。</p><p>十三、gzip压缩工具<br>.gzip工具负责压缩和解压缩.gz格式的压缩包。</p><pre><code>   gzip xxx                //压缩   gzip -d xxx.gz       //解压缩   gzip对文件夹进行压缩   gzip -r xxx            //对文件夹进行压缩   gzip -rd xxx.gz     //对文件夹进行解压缩   gzip虽然可以对文件夹进行压缩，但是并不能提供打包的服务，只是对文件夹中的所有文件进行了单独的压缩。</code></pre><p>十四、bzip2压缩工具<br>和gzip类似，只是bzip2工具负责压缩和解压缩.bz2格式的压缩包。</p><p>bzip2 -z xxx                 //压缩</p><p>bzip2 -d xxx.gz     //解压缩</p><p>十五、tar打包工具<br>tar工具参数：</p><p>-f，使用归档文件或 ARCHIVE 设备</p><p>-c：创建新归档，创建压缩文件</p><p>-x：从图档中解出文件，解压缩</p><p>-j：使用bzip2压缩格式。</p><p>-z：使用gzip压缩格式</p><p>-v：打印出命令执行过程。</p><p>tar工具提供打包服务，就是将多个文件打包，比如</p><p>tar -vcf test.tar test      <a href="//xn--testtest-jh9mm75ebgp6wa.tar">//将test打包成test.tar</a></p><p>tar -vxf test.tar            //解包</p><pre><code>   上面的tar命令只提供了打包和解包的功能，tar在提供打包和解包的同时使用gzip/bzip2进行压缩，实现类似windwos下winRAR软件的命令。1、对.tar.bz2进行压缩和解压缩   tar -vxjf xxx.tar.bz2      解压缩   tar -vcjf xxx.tar.bz2 xxx 压缩2、对.tar.gz进行压缩和解压缩   tar -vxzf xxx.tar.gz       //解压缩   tar -vczf xxx.tar.gz xxx //压缩</code></pre><p>十六、其他格式的压缩和解压缩<br>1、.rar格式<br>需要先安装rar：sudo apt-get install rar</p><pre><code>   rar x xxx.rar           //解压缩   rar a xxx.rar xxx     //压缩2、.zip格式   zip格式压缩使用“zip“命令：   zip -rv xxx.zip xxx    zip格式解压缩使用“unzip”命令：   unzip -v xxx.zip</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>交通预测的层次图卷积网络</title>
      <link href="/2024/07/27/%E4%BA%A4%E9%80%9A%E9%A2%84%E6%B5%8B%E7%9A%84%E5%B1%82%E6%AC%A1%E5%9B%BE%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
      <url>/2024/07/27/%E4%BA%A4%E9%80%9A%E9%A2%84%E6%B5%8B%E7%9A%84%E5%B1%82%E6%AC%A1%E5%9B%BE%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1>1.研究背景</h1><p>（1）目前基于GCN的方法忽略了交通系统的自然层次结构，许多方法都关注于如何建立时空模型来表达非静态交通模式。<br>本文提出一种新的层次图卷积网络(HGCN)</p><h2 id="1-1-模型架构">1.1 模型架构</h2><p><img src="/.com//image-20240727160005645.png" alt><br>如图1所示，本文提出的HGCN具有用于交通预测的多层GCN的特点，即由路段节点聚类而成的路网微观层和具有区域节点的网络宏观层。此外，本工作最重要的贡献是构建了GCNs微观和宏观层之间的相互作用，整合了不同尺度的路段和区域特征，提高了交通预测性能。本文的主要贡献总结如下:</p><ul><li>结合交通系统的路段和区域特征，提出了一种基于池化的分层图卷积网络交通预测方法;</li><li>通过引入动态传输块之间的相互作用，将不同层交通图上的多个GCNs进行合理整合;</li><li>该方法在两个大城市的交通数据集上进行了测试，结果优于目前最先进的相关工作。</li></ul><p>基于谱聚类的交通层次图生成方法</p><ul><li>使用路段节点之间的距离来构建路网图，即使用路段端点的GPS坐标来计算路段之间的距离，忽略距离大于给定阈值的路段。<br><img src="/.com//image-20240727164835354.png" alt><br>图2:区域数据生成示意图。</li></ul><p>首先从路网的图中得到相邻矩阵。然后对相邻矩阵的拉普拉斯矩阵进行谱聚类，得到路网的分区。分区的每一个聚类都可以看作是区域图的一个宏节点。</p><p>区域图上的GCN：<br>如图1所示，区域图上的GCN是通过一个线性变换和两个叠加的时空块(S-T block)实现的。前者实现了对输入区域数据的转换−−!XR，后者通过GCN提取区域数据的时空特征。</p><p>时空块：S-T块由时间门卷积、空间门图卷积和时间注意机制三部分组成，分别用于学习区域数据的局部时间特征、局部时空特征和全局时间关系。<br>时间卷积：提出了在时间轴上利用门卷积并行提取分层局部时间特征的方法。与LSTM相比，该方法对长时间序列数据具有更高的效率。<br>空间卷积：为了同时探索空间特征和局部时间特征，我们提出将(4)中的扩散图卷积嵌入到时间门卷积(不含膨胀卷积)中，如下所示:<br><img src="/.com//image-20240727183513856.png" alt><br>时间注意机制: 利用时间关注(Feng et al 2017)来捕获交通数据的大尺度时间相关性<br>综上所述，我们将S-T块总结为算法1<br><img src="/.com//image-20240727183632977.png" alt><br>交通预测块：</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-时空同步图卷积网络:一种新的时空网络数据预测框架</title>
      <link href="/2024/07/13/2020-%E6%97%B6%E7%A9%BA%E5%90%8C%E6%AD%A5%E5%9B%BE%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C-%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%97%B6%E7%A9%BA%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%A2%84%E6%B5%8B%E6%A1%86%E6%9E%B6/"/>
      <url>/2024/07/13/2020-%E6%97%B6%E7%A9%BA%E5%90%8C%E6%AD%A5%E5%9B%BE%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C-%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%97%B6%E7%A9%BA%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%A2%84%E6%B5%8B%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1>1.研究背景</h1><p>问题：以往的时空预测很难处理复杂时空相关性和异质性，常常忽略时空数据的异质性。<br>本文提出一种时空同步图卷积网络(STSGCN)模型，用于时空网络数据预测。</p><ul><li>利用时空同步建模机制，能够有效捕获复杂的局部时空关联。</li><li>同时，在模型中针对不同时间段设计了多个模块，有效捕捉局部时空图的异质性。<br><img src="/.com//image-20240713200751104.png" alt></li></ul><p>图1:红节点在时空网络中的影响。棕色箭头表示网络的边缘，也表示在空间维度上的影响。蓝色箭头表示红色节点在下一个时间步对自身的影响。绿色箭头表示红色节点与其相邻节点在下一个时间步之间跨空间和时间维度的影响。T1和t2表示两个连续的时间步长</p><p>三种不同的影响：</p><ul><li>时空图中的每个节点都可以在同一时间步对相邻节点产生直接影响，这种影响来源于实际的空间依赖关系。</li><li>由于时间序列中的时间相关性，每个节点也可以在下一个时间步直接影响自己。</li><li>由于同步的时空相关性，每个节点甚至可以在下一个时间步直接影响相邻节点<br>局部时空相关性：三种不同影响存在的原因是信息在时空网络中的传播同时沿着空间和时间维度发生。由于节点间空间距离和时间序列时间范围的限制，这些复杂的时空相关性通常是局部化的。</li><li>DCRNN、STGCN、ASTGC只直接捕捉到我们上面提到的前两种影响(空间依赖性和时间相关性)它们将空间表示输入到时间建模模块中，以间接捕获第三种影响。本文觉得这些复杂的局部时空相关性可以同时被捕获。</li></ul><h2 id="2-模型结构">2.模型结构</h2><p>STSGCN模型的体系结构</p><p><img src="/.com//image-20240713203507439.png" alt></p><p>STSGCN的核心思想：</p><ul><li>在前一步和下一步将每个节点与自身连接起来，构建局域化的时空图</li><li>使用时空同步图卷积模块捕获局部时空相关性</li><li>部署多个模块对时空网络序列的异构性进行建模</li></ul><h2 id="2-1-局域时空图构建">2.1 局域时空图构建</h2><p>目标：建立一个模型，直接捕获每个节点对其邻居的影响。<br>如下图在相邻的时间步将所有节点与其自身连接起来。通过将所有节点与前一时刻和后一时刻的自身连接起来，我们可以得到一个局域化的时空图。根据局域化时空图的拓扑结构，可以直接捕获每个节点与其时空邻居之间的相关性。</p><p><img src="/.com//image-20240713204215762.png" alt><br>(a)是一个局域化时空图的例子。(b)为(a)中局部时空图的邻接矩阵。a (ti)表示时间步长i时空间图的邻接矩阵。Ati→tj表示时间步长i和j时节点与自身的连接。<br>局域化时空图的邻接矩阵可表示为:<br><img src="/.com//image-20240714213403705.png" alt></p><h2 id="2-2-时空同步图卷积模块">2.2 时空同步图卷积模块</h2><p>建了一个时空同步图卷积模块(STSGCM)来捕获局部时空相关性。</p><ul><li>图卷积运算可以将每个节点的特征与其相邻节点进行聚合。</li><li>在顶点域中定义了一种图卷积运算来聚合时空网络中的局域时空特征。</li><li>每个节点在相邻的时间步长上聚合自己和邻居的特征</li><li>聚合函数是一个线性组合，其权值等于节点与其相邻节点之间的边的权值。</li><li>带有激活函数的全连接层，将节点的特征转化为一个新的空间。<br>图卷积运算可表示为:<br><img src="/.com//image-20240714215031657.png" alt><br>式中，A∈R3N×3N为局域化时空图的邻接矩阵，h(l−1)∈R3N×C为第l个图卷积层的输入，W∈RC×C, b∈RC为可学习参数，σ为激活函数，</li></ul><p>选择GLU作为图卷积层的激活函数，图卷积层可以描述如下:<br><img src="/.com//image-20240714221104686.png" alt></p><p>叠加多个图卷积操作来扩展聚集区域，这可以增加图卷积操作的接受域，以捕获局部时空相关性(图4 (a))。<br><img src="/.com//image-20240714220437471.png" alt><br>图4:(a)是具有两个图卷积操作的时空同步图卷积模块的架构示例。Cin和Cout分别表示输入矩阵和输出矩阵的特征个数，AGG表示聚合层。(b)表示聚合操作的输出。©为聚合层裁剪操作示例，仅保留中间时间步的节点。<br>我们选择JK-net (Xu et al . 2018)作为STSGCM的基础结构，并设计了一个新的聚合层来过滤无用信息(图4 (b)， 4 ©)。</p><ul><li>对于具有L个图卷积操作的STSGCM，每个图卷积操作的输出将被馈送到聚合层(图4 (a))。</li><li>聚合层将压缩所有的输出层在STSGCM中。聚合操作有两个步骤:聚合和裁剪。</li><li>我们选择最大池作为聚合操作。它对STSGCM中所有图形卷积的输出应用一个元素max操作。</li></ul><p>max操作需要所有的输出都有相同的大小，所以一个模块内图形卷积操作的核数应该是相等的。最大聚合操作可表示为:<br><img src="/.com//image-20240714221357372.png" alt></p><p>裁剪操作：(图4 ©)删除了节点在前一个和下一个时间步长的所有特征，只保留中间时刻的节点。裁剪操作保留中间时间步的节点，生成STSGCM h(final)∈RN×Cout的输出。<br><img src="/.com//image-20240715175041479.png" alt></p><p>为了进一步研究STSGCN不同模块的效果，设计了6种不同的STSGCN模型分析。<br><img src="/.com//image-20240715175838818.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 交通预测论文研读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交通预测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python知识点总结</title>
      <link href="/2024/07/12/python%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
      <url>/2024/07/12/python%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>1.map()会根据提供的函数对指定序列做映射<br>函数语法：map(function,iterable,…)<br>返回包含每次function函数返回值的新列表<br>lambda是个匿名函数，需要一个函数时又不想命名的一个函数时使用<br>2.python变量查找范围：局部作用域&gt;外部嵌套作用域&gt;全局作用域&gt;内置模块作用域</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>KST-GCN:基于知识驱动的时空图卷积网络交通预测</title>
      <link href="/2024/07/07/KST-GCN-%E5%9F%BA%E4%BA%8E%E7%9F%A5%E8%AF%86%E9%A9%B1%E5%8A%A8%E7%9A%84%E6%97%B6%E7%A9%BA%E5%9B%BE%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C%E4%BA%A4%E9%80%9A%E9%A2%84%E6%B5%8B/"/>
      <url>/2024/07/07/KST-GCN-%E5%9F%BA%E4%BA%8E%E7%9F%A5%E8%AF%86%E9%A9%B1%E5%8A%A8%E7%9A%84%E6%97%B6%E7%A9%BA%E5%9B%BE%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C%E4%BA%A4%E9%80%9A%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1>1.研究背景</h1><p>（1）提出问题：现有的研究很少考虑外部因素或忽视外部因素之间复杂的相关性对交通的影响。<br>（2）本文解决问题：提出了一种基于时空图卷积网络的知识表示驱动的交通预测方法。首先构建交通预测的知识图谱，并通过知识表示学习方法KR-EAR导出知识表示。然后，我们提出了知识融合单元(KF-Cell)，将知识和交通特征结合起来作为时空图卷积骨干网的输入。</p><h1>2.模型框架</h1><ul><li>为了在预测交通流量时考虑交通信息与外界因素之间的相关性，首先构建了一个专门设计的知识图。</li><li>为了将主干时空图卷积网络与知识相结合，将嵌入和流量特征通过KF-Cell融合，然后馈送到时空图卷积网络中。<br>作用：</li><li>知识驱动的时空图卷积网络(KST-GCN)除了能够捕捉交通信息与属性之间的知识结构和语义关系外，还能够捕捉交通的时空特征。<br><img src="/.com//image-20240707163419781.png" alt><br><img src="/images/image-20240707163419781.png" alt="图片"><br>通网络拓扑a、特征矩阵X和交通知识图CKG，学习函数f来计算未来一段时间的交通特征:<br><img src="/.com//image-20240707165142714.png" alt><br><img src="/images/image-20240707165142714.png" alt="图片"></li></ul><h2 id="2-1-KR-EAR">2.1 KR-EAR</h2><p>本文采用基于实体-属性-关系的知识图表示模型KR-EAR来捕获路段与外部因素之间的知识结构和语义信息。</p><p>如图3所示，左侧虚线框为基于实体-关系表示构建的知识图，右侧虚线框为KR-EAR采用的基于实体-属性-关系的知识图表示。Ri是知识图中的第ith类关系，其中ra和rb是连接这两类属性值的属性类。</p><p><img src="/.com//image-20240707165846542.png" alt><br><img src="/images/image-20240707165846542.png" alt="图片"><br>图3所示。基于实体关系的表示方法(左)和基于实体属性关系的表示方法(右)。圆圈表示实体，而正方形和五边形表示两种不同类型属性的值。</p><ul><li>（e1,ra1,e6）是一个属性三元组，（e2,r2,e3）是一个关系三元组。</li><li>本文道路、属性的关系表示为三元组CKG={R, R_att, att_att}，<br><img src="/.com//image-20240707171707349.png" alt><br><img src="/images/image-20240707171707349.png" alt="图片"><br><img src="/.com//image-20240707171714000.png" alt><br><img src="/images/image-20240707171714000.png" alt="图片"></li><li>其中R表示路段vi与vj邻接关系adj的关系三元组，n是路段个数</li><li>R_att表示道路与属性对应关系的属性三元组,attl−vi为路段i对应的属性值(如天气晴朗)，L为属性类别数。</li></ul><h2 id="2-1-KF-Cell">2.1 KF-Cell</h2><p><img src="/.com//image-20240709095025364.png" alt></p><ul><li>KFCell将外部知识引入到主干时空图卷积网络中,既适用于基于图神经网络和递归神经网络的交通预测模型，又不失通用性。</li><li>KF-Cell的输入为知识嵌入XE，以及时刻t观测到的路段特征Xt。输出为时刻t与外部知识融合的更新路段特征，记为X0 t。由于外部因素的多样性，我们将外部因素分为两类:静态因素和动态因素。</li><li>图4中的es和式12中的ed分别表示应用KR-EAR后的静态和动态外部因素的路段嵌入。wd,ws为线性变换，bd,bs为偏置常数，[·]为串联。<br><img src="/.com//image-20240709101929638.png" alt></li><li>GCN利用图谱理论捕捉交通网络的拓扑关系和特征，得到各路段的表示向量:<br><img src="/.com//image-20240709112143825.png" alt></li></ul><h2 id="3-1-实验设置">3.1 实验设置</h2><p>（1）数据集：深圳市罗湖区的一个数据集，含2015年1月1日至1月31日各条街道的出租车轨迹数据、路网数据、天气数据和POI数据。</p><p>（2）知识图谱数据：计算每个路段上poi的数量，然后使用路段、类别和poi的数量来构造属性三元组。例如，(道路1段，餐馆，15)和(道路1段，学校，6)表示在道路1段周围有6所学校和15家餐馆。时间、天气条件及其相关性，如(路段ID，天气条件，时刻)和(时刻t，天气，小雨)，也用于构建知识图。</p><p>（3）DCRNN和T-GCN上评估了所提出的方法，并将其对应的KST-GCN变体分别命名为KF-DCRNN和KF-T-GCN。</p><p>（4）隐藏单元数和知识嵌入维数是模型的两个重要超参数。因此，采取两种方法：设置合适的嵌入维数和隐藏单元的数量。</p><p>图6(a)和图7(a)显示了RMSE、MAE和准确率<br><img src="/.com//image-20240708094604315.png" alt><br><img src="/images/image-20240708094604315.png" alt="图片"></p><p><img src="/.com//image-20240708094624218.png" alt><br><img src="/images/image-20240708094624218.png" alt="图片"><br>图6(b)和7(b)显示了不同隐藏单元数量的模型的RMSE、MAE、准确率和R2。当隐藏单元数设置为128时，KF-T-GCN具有最佳性能。对于KF-DCRNN，最优选择是64，这是性能最好的位置。</p><p><img src="/.com//image-20240708094706332.png" alt><br><img src="/images/image-20240708094706332.png" alt="图片"></p><p><img src="/.com//image-20240708094714977.png" alt><br><img src="/images/image-20240708094714977.png" alt="图片"><br>（5）结果分析</p><p><img src="/.com//image-20240708103458992.png" alt><br><img src="/.com//image-20240708105714407.png" alt></p><p><img src="/.com//image-20240708105723532.png" alt></p><p><img src="/.com//image-20240708105848344.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 交通预测论文研读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交通预测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-CNN-BiLSTM混合模型的长期交通流量预测学习</title>
      <link href="/2024/07/04/2023-CNN-BiLSTM%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%95%BF%E6%9C%9F%E4%BA%A4%E9%80%9A%E6%B5%81%E9%87%8F%E9%A2%84%E6%B5%8B%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/07/04/2023-CNN-BiLSTM%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%95%BF%E6%9C%9F%E4%BA%A4%E9%80%9A%E6%B5%81%E9%87%8F%E9%A2%84%E6%B5%8B%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>1.研究背景</h1><p>（1）提出问题：如何解决城市拥堵和长期预测？<br>（2）此文方法：积神经网络与双向长短期记忆网络相结合的混合模型，并将其应用于城市道路长期交通流预测。</p><ul><li>为了提高lstm的性能，以前的作者常常使用CNN-LSTM混合模型，提高交通预测的精度。</li><li>BiLSTM是LSTM的扩展，两个LSTM：一个应用于输入数据(正向)，另一个应用于输入数据的反向(反向)。</li><li>本文利用CNN块从输入矩阵中提取复杂特征的潜力，以及BiLSTM块通过双重(向前和向后)理解每种情况下的上下文来发现变量之间的时间依赖性的能力。</li></ul><h1>2.相关工作</h1><h2 id="2-1问题描述">- 2.1问题描述</h2><ul><li>本文是预测大城市主要道路的长期交通流量。具体来说，我们将提前12、24、48、72小时预测气流。我们将使用最后四个可用时间步的数据。</li><li>设h时间步长，h+k希望进行预测的时间步长，使用9个预测变量（x1,x2…x9）对应h-3的时间步长来预测h+k的时间步长。</li><li><img src="/.com//image-20240704205200283.png" alt><br><img src="/images/1.png" alt="图片"></li></ul><h2 id="2-2-数据集">2.2 数据集</h2><ul><li>选取马德里市选择了四个交通站点，目标是交通流量大但具有不同特征的街道。其中三个位于城市核心区域，其中一个是城市的主要出入口道路。</li></ul><h1>3.CNN-BiLSTM架构</h1><ul><li>利用CNN的优势对噪声数据进行滤波和去噪，获得大量时间序列内部有价值的信息。</li><li>利用BiLSTM网络的能力对时间数据序列的短期和长期情况进行建模和预测。</li><li></li></ul><h2 id="3-1-CNN模块">3.1 CNN模块</h2><ul><li>卷积层和池化层的目的是过滤输入数据，从矩阵中提取重要信息。卷积运算由输入数据和称为核或过滤器的较小矩阵之间的卷积层执行。</li><li>使用多个过滤器提高模型的性能。<br>设𝐻为输入矩阵，𝐼为核矩阵，𝑚和𝑛为结果矩阵(𝑅)的行和列的索引。则公式为：<br><img src="/.com//image-20240705114357299.png" alt></li><li>采用最大池化层，除值来降低卷积矩阵的维数，提高了模型的鲁棒性。</li></ul><h2 id="3-2-BiLSTM-block">3.2  BiLSTM block</h2><p>模型的第二部分是由BiLSTM网络、dropout层和dense层组成的BiLSTM块。</p><ul><li>BiLSTM网络包括正向LSTM网络和后向LSTM网络。正向LSTM使用𝑡−𝑘~𝑡的序列作为输入，反向LSTM使用𝑡~𝑡−𝑘的序列作为输入。通过使用前面描述的方法计算前向和后向网络的输出。</li><li>BiLSTM层输出一个向量(𝑌𝑡)，由下式得到:<br><img src="/.com//image-20240707095336538.png" alt></li></ul><p><img src="/.com//image-20240707152104464.png" alt></p><ul><li><strong>输入层</strong>: 输入形状为 (4, 9, 1)。</li><li><strong>TimeDistributed 卷积层</strong>: Conv1D(filters=256, kernel_size=2, activation=‘relu’)。</li><li><strong>TimeDistributed 最大池化层</strong>: MaxPooling1D(pool_size=2, padding=‘same’)。</li><li><strong>TimeDistributed 展平层</strong>: Flatten。</li><li><strong>双向 LSTM 层</strong>: Bidirectional(LSTM(500, activation=‘relu’))。</li><li><strong>Dropout 层</strong>: Dropout(0.5)。</li><li><strong>全连接层</strong>: Dense(1)。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 交通预测论文研读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交通预测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022-交通预测的自适应图时空变压器网络</title>
      <link href="/2024/07/02/2022-%E4%BA%A4%E9%80%9A%E9%A2%84%E6%B5%8B%E7%9A%84%E8%87%AA%E9%80%82%E5%BA%94%E5%9B%BE%E6%97%B6%E7%A9%BA%E5%8F%98%E5%8E%8B%E5%99%A8%E7%BD%91%E7%BB%9C/"/>
      <url>/2024/07/02/2022-%E4%BA%A4%E9%80%9A%E9%A2%84%E6%B5%8B%E7%9A%84%E8%87%AA%E9%80%82%E5%BA%94%E5%9B%BE%E6%97%B6%E7%A9%BA%E5%8F%98%E5%8E%8B%E5%99%A8%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1>1.研究背景</h1><h2 id="1-1-引言">1.1  引言</h2><p>（1）提出问题：现有的大多数研究都只考虑时空相关性，或者在一个滑动的时间窗口对这种时空的依耐性进行建模，而未能对直接的时空相关性进行建模。<br>（2）解决问题方案：作者受图域上成功的变换方法的启发，提出了利用局部多头自关注直接在自适应时空图上建立跨时空相关性模型(ASTTN)。<br>它堆叠多个时空注意层，在输入图上应用自注意，然后是线性层进行预测。</p><p>大概思路：</p><ul><li>对时空图进行了多头自注意，并设计了st -注意块来处理图结构数据。</li><li>ASTTN采用堆叠的st -注意力联合模块，些模块联合建模时空相关性，而不是将其分解为空间和时间域。</li></ul><h2 id="1-2-相关工作方法">1.2 相关工作方法</h2><h3 id="（1）问题定义：">（1）问题定义：</h3><ul><li>路网表示为一个加权图𝐺= (V, E，变量)，其中，V是|V | =抛抛物的节点集合，抛抛物是|E | =抛抛物的边集合，抛抛物是描述节点间空间距离的邻接矩阵。</li><li>在每一个时间步𝑡，图将有一个特征矩阵𝑋𝑡∈R倘或𝐷，它将随时间动态变化𝑡。</li><li>给定一个图形𝐺和历史𝑇时间步长的特征矩阵，流量预测的目标是学习一个函数𝑓，该函数可以预测未来𝑇时间步长的特征矩阵。</li></ul><h3 id="（2）局部时空注意力">（2）局部时空注意力</h3><ul><li>空间(或时间)注意力定义：将具有相同时间步长(或位置)的节点之间的注意。</li><li>并使用st-注意来表示具有不同时间步长和位置的节点对的注意。</li></ul><p>1.如图1(a)所示，融合时空注意力最直接的方法是计算时空图中每对节点的注意力(全st-注意力)。这种方法可以在空间和时间域中捕获两个远离彼此的节点的注意力，但是时间复杂度有点高O(T^2N^2)。</p><p>2.（b）图将注意力分别分解为空间维度和时间维度降低了复杂度，但是不能模拟动态时间注意力（由空间注意力和时间注意力结合计算得到的）,时间复杂度有点高O(T^2+N^2)</p><p>3.（c）图使用的是多头注意力，用空间邻接性，将st-attention范围保持在空间1跳邻接区内来降低复杂性。</p><p>𝑄=𝑋𝑊𝑄,   𝐾=𝑋𝑊𝐾,    𝑉=𝑋𝑊𝑉,<br>查询𝑄和键𝐾具有相同的维度𝐷𝑄𝐾，而x的维度为𝐷x，<br>实际操作中，我们设置𝐷𝑄𝐾=𝐷x,则局部多头自注意(L-MSA)可表示为：<br><img src="/.com//image-20240702213810021.png" alt><br><img src="/images/0.png" alt="图片"><br>得到的时间复杂度为O(ET^2)</p><p>图1:不同类型的时空注意与相应注意矩阵的比较。<br><img src="/.com//image-20240703105841807.png" alt><br><img src="/images/1.png" alt="图片"></p><h1>2.模型框架ASTTN</h1><p><img src="/.com//image-20240702215037710.png" alt><br><img src="/images/2.png" alt="图片"><br>（1）ST-attention块：执行spatialtemporal关注(2.2)中讨论输入流量矩阵𝐻(𝑙−1)∈R𝑁×𝑇×𝐷。由两组不同的图和两个并行的局部多头关注模块组成。G是原始的路线图，邻接矩阵是由原始的地理连接决定的。第二个是自适应图𝐺𝑎𝑝𝑡，其邻接矩阵≥𝑎𝑝𝑡完全参数化，如Eq。</p><ul><li>根据以上两种图得到时空嵌入STE和STEapt，然后将其加入到输入𝐻(𝑙−1)中。</li><li>其次，局部多头MSA按照Eq. 2和3执行局部时空注意,输入的st-feature矩阵是平坦化的输入𝐻(𝑙−1)，输入的st-attention mask由下面板图1中所示的变量或变量𝑎𝑝𝑡构成。</li><li>最后，并联本地MSA模块的输出将使用门控融合机制进行融合输出。</li></ul><p>（2）输入输出层：输入和输出层是具有ReLU激活的全连接网络(FC)</p><ul><li>输入层用于将输入节点特征映射到更高维度𝐷。</li><li>输出层用于将时间维度从历史时间步𝑇映射到未来时间维度𝑇’，预测𝑌+𝑋𝑡+1，…，{𝑋𝑡+𝑇’]，然后用于计算相对于基本真值的平均绝对误差(MAE)𝑌=[𝑋𝑡+1，…]，𝑋𝑡+𝑇’]:</li></ul><h1>3.实验</h1><h2 id="3-1-实验设置">3.1 实验设置</h2><ul><li>使用𝑇= 12(1小时)作为历史时间步长来预测下一个𝑇’ = 6,12,24步的未来交通状况。</li><li>使用Adam优化器训练我们的模型，初始学习率为0.001。</li><li>构造自适应图，创建随机初始化的节点嵌入𝑈1，𝑈2，遵循尺寸为10的均匀分布。</li><li>超参数包括st-attention block的个数𝐿、注意头的个数𝐾、每个头的维数𝑑(中间节点维数𝐷=𝑑×𝐾)、掩码自适应图的in-degree阈值。</li></ul><h2 id="3-2-实验细节">3.2 实验细节</h2><ul><li>利用输入图的稀疏性，使用DGL包训练图神经网络。</li><li>为了有效地计算st-attention，我们只使用DGL构建空间图，以避免大量内存使用(与构建整个时空图相比)。</li><li>为了计算局部st-注意力，我们然后固定𝑄矩阵，同时沿第一个时间维度滚动𝐾，x2矩阵1，并将这个𝑄，𝐾，x2矩阵分配给每个节点，使用DGL消息传递来计算注意力。们实际上是在计算两个相邻时间步之间的st-attention(图1中橙色虚线)。</li></ul><h2 id="3-3-实验结果">3.3 实验结果</h2><p><img src="/.com//image-20240703104336782.png" alt><br><img src="/images/3.png" alt="图片"></p><ul><li>比较了ASTTN与表1中的基准模型在met - la和PEMS-BAY数据集上30分钟(6步)、60分钟(12步)和120分钟(24步)的性能。</li><li>可以发现ASTTN模型优于其他的基于图结构的模型，显示了将图结构纳入时间预测的重要性。</li><li>与其他模型相比，ASTTN模型在长期预测中的效果更明显<br><img src="/.com//image-20240703110309041.png" alt><br><img src="/images/image-20240703110309041.png" alt="图片"><br>表2:astn与其他基准模型在PeMSD4和PeMSD7数据集上提前60分钟预测的性能比较(MAE/RMSE/MAPE%)。<br><img src="/.com//image-20240703110336542.png" alt><br><img src="/images/image-20240703110336542.png" alt="图片"><br>表3:不同关注类型在PEMS-BAY(60分钟)数据集上的性能比较(MAE/RMSE/MAPE%)。<br><img src="/.com//image-20240703110511018.png" alt><br><img src="/images/image-20240703110511018.png" alt="图片"><br>表4:模型变体在PEMS-BAY上的MAE比较。</li></ul><h1>4.总结</h1><p>创新点：</p><ul><li>时空建模与图结构相结合</li><li>堆叠的st-注意力块构建模拟空间和时间相关性</li><li>局部多头自注意来有效地计算时空图和自适应图上的注意</li></ul>]]></content>
      
      
      <categories>
          
          <category> 交通预测论文研读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交通预测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习学习笔记</title>
      <link href="/2024/07/01/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/07/01/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习笔记</title>
      <link href="/2024/06/30/Shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/06/30/Shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ol><li>Shell概述<br>Shell是一个命令解释器，它接收应用程序/用户命令，然后调用操作系统内核。<br><img src="/images/x.png" alt="图片"><br>Shell是一个功能强大的编程语言，易编写、易调试、灵活性强。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本命令</title>
      <link href="/2024/06/29/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/06/29/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>此章介绍Linux的基本命令<br>Linux的目录结构<br>Linux路径的描述方式<br>Linux命令入门<br>ls命令<br>ls 命令的 -a选项<br>ls命令的 -l选项<br>ls命令选项的组合使用<br>ls选项和参数的组合使用<br>ls 命令的 -h选项<br>目录切换相关命令(cd/pwd)<br>cd 切换工作目录<br>pwd 查看当前工作目录<br>相对路径、绝对路径和特殊路径符<br>相对路径和绝对路径<br>特殊路径符**<br>创建目录命令(mkdir)<br>文件操作命令part1(touch、cat、more）<br>touch 创建文件<br>cat命令 查看文件内容<br>more命令查看文件内容<br>文件操作命令part2(cp、mv、rm）<br>cp命令复制文件文件夹<br>mv移动文件或文件夹<br>rm删除文件、文件夹<br>查找命令(which、find）<br>which命令<br>find命令<br>grep、wc和管道符<br>grep命令<br>wc命令做数量统计<br>管道符<br>echo、tail和重定向符<br>echo命令<br>重定向符<br>tail持续跟踪文件更改<br>vi编辑器<br>vi编辑器的快速体验<br>Linux的目录结构<br>Linux的目录结构是一个树型结构<br>Windows 系统可以拥有多个盘符, 如 C盘、D盘、E盘<br>Linux没有盘符这个概念, 只有一个根目录 /, 所有文件都在它下面</p><p>Linux路径的描述方式<br>在Linux系统中，路径之间的层级关系，使用：/ 来表示<br>在Windows系统中，路径之间的层级关系，使用： \ 来表示</p><p>Linux命令入门<br>ls命令<br>ls命令的作用是列出目录下的内容，语法细节如下：</p><p>-a -l -h 是可选的选项<br>Linux路径是此命令可选的参数<br>不使用选项和参数，直接使用ls命令本体，表示：以平铺形式，列出当前工作目录下的内容</p><p>ls 命令的 -a选项<br>如下语法，ls命令是可以使用选项的</p><p>-a选项，表示：all的意思，即列出全部文件（包含隐藏的文件/文件夹）</p><p>可以看到，ls -a 对比 ls 列出的内容更多了。<br>图中以.开头的，表示是Linux系统的隐藏文件/文件夹（只要以.开头，就能自动隐藏）<br>只有通过-a选项，才能看到这些隐藏的文件/文件夹<br>ls命令的 -l选项</p><p>-l选项，表示：以列表（竖向排列）的形式展示内容，并展示更多信息</p><p>ls命令选项的组合使用<br>语法中的选项是可以组合使用的，比如学习的-a和-l可以组合应用。<br>写法：</p><p>ls -l -a<br>ls -la<br>ls -al<br>上述三种写法，都是一样的，表示同时应用-l和-a的功能</p><p>ls选项和参数的组合使用<br>除了选项本身可以组合以外，选项和参数也可以一起使用。</p><p>ls 命令的 -h选项<br>-h 表示以易于阅读的形式，列出文件大小，如K、M、G<br>-h选项必须要搭配 -l 一起使用<br>使用-h选项后</p><p>目录切换相关命令(cd/pwd)<br>cd 切换工作目录<br>当Linux终端（命令行）打开的时候，会默认以用户的HOME目录作为当前的工作目录<br>我们可以通过cd命令，更改当前所在的工作目录。<br>语法：cd [Linux路径]</p><p>cd命令无需选项，只有参数，表示要切换到哪个目录下<br>cd命令直接执行，不写参数，表示回到用户的HOME目录</p><p>pwd 查看当前工作目录<br>通过ls来验证当前的工作目录，其实是不恰当的。<br>我们可以通过pwd命令，来查看当前所在的工作目录。</p><p>pwd命令，无选项，无参数，直接输入pwd即可</p><p>相对路径、绝对路径和特殊路径符<br>相对路径和绝对路径<br>绝对路径：以根目录为起点，描述路径的一种写法，路径描述以/开头<br>相对路径：以当前目录为起点，描述路径的一种写法，路径描述无需以/开头</p><p>如图，通过pwd得知当前所在是HOME目录：/home/itheima<br>现在想要通过cd命令，切换工作目录到Desktop文件夹中去。<br>那么，cd命令的参数（Linux路径）如何写呢？</p><p>cd /home/itheima/Desktop 绝对路径<br>cd Desktop 相对路径<br>上述两种写法，都可以正确的切换目录到指定的Desktop中。<br>特殊路径符**</p><p>如图，当前工作目录处于：/home/itheima/Desktop<br>现在想要，向上回退一级，切换目录到/home/itheima中，如何做？</p><p>可以直接通过cd，即可回到HOME目录</p><p>也可以通过特殊路径符来完成。<br>特殊路径符：</p><p>**.**表示当前目录，比如 cd ./Desktop 表示切换到当前目录下的Desktop目录内，和cd Desktop效果一致</p><p>**…**表示上一级目录，比如：cd … 即可切换到上一级目录，cd …/… 切换到上二级的目录</p><p>~ 表示HOME目录，比如：cd ~ 即可切换到HOME目录或cd ~/Desktop，切换到HOME内的Desktop目录</p><p>创建目录命令(mkdir)<br>通过mkdir命令可以创建新的目录（文件夹）<br>语法：</p><p>参数必填，表示Linux路径，即要创建的文件夹的路径，相对路径或绝对路径均可<br>-p选项可选，表示自动创建不存在的父目录，适用于创建连续多层级的目录</p><p>mkdir -p 选项<br>如果想要一次性创建多个层级的目录，如下图</p><p>会报错，因为上级目录itcast和good并不存在，所以无法创建666目录<br>可以通过-p选项，将一整个链条都创建完成。</p><p>注意：创建文件夹需要修改权限，请确保操作均在HOME目录内，不要在HOME外操作<br>涉及到权限问题，HOME外无法成功<br>后续我们会讲解权限管控的知识<br>文件操作命令part1(touch、cat、more）<br>touch 创建文件<br>可以通过touch命令创建文件<br>语法：touch Linux[路径]</p><p>touch命令无选项，参数必填，表示要创建的文件路径，相对、绝对、特殊路径符均可以使用</p><p>cat命令 查看文件内容<br>cat同样没有选项，只有必填参数，参数表示：被查看的文件路径，相对、绝对、特殊路径符都可以使用</p><p>more命令查看文件内容<br>more命令同样可以查看文件内容，同cat不同的是：</p><p>cat是直接将内容全部显示出来<br>more支持翻页，如果文件内容过多，可以一页页的展示<br>同样没有选项，只有必填参数，参数表示：被查看的文件路径，相对、绝对、特殊路径符都可以使用<br>Linux系统内置有一个文件，路径为：/etc/services，可以使用more命令查看<br>more /etc/services<br>在查看的过程中，通过空格翻页<br>通过q退出查看<br>文件操作命令part2(cp、mv、rm）<br>cp命令复制文件文件夹<br>p命令可以用于复制文件\文件夹，cp命令来自英文单词：copy<br>语法：cp [-r] 参数1 参数2</p><p>-r 选项，可选，用于复制文件夹使用，表示递归<br>参数1，Linux路径，表示被复制的文件或文件夹<br>参数2，Linux路径，表示要复制去的地方<br>复制文件</p><p>复制文件夹</p><p>注意：复制文件夹，必须使用-r选项，否则不会生效<br>mv移动文件或文件夹<br>语法： mv 参数1 参数2</p><p>参数1，Linux路径，表示被移动的文件或文件夹<br>参数2，Linux路径，表示要移动去的地方，如果目标不存在，则进行改名，确保目标存在</p><p>rm删除文件、文件夹<br>rm命令可用于删除文件、文件夹<br>语法： rm [-r -f] 参数1 参数2 … 参数N</p><p>同cp命令一样，-r 选项用于删除文件夹<br>-f 表示force，强制删除（不会弹出提示确认信息）<br>普通用户删除内容不会弹出提示，只有root管理员用户删除内容会有提示<br>所以一般普通用户用不到-f选项<br>参数1、参数2、…、参数N 表示要删除的文件或文件夹路径，按照空格隔开<br>删除文件</p><p>删除多个文件</p><p>rm命令支持通配符 <em>，用来做模糊匹配<br>符号 * 表示通配符，即匹配任意内容（包含空），示例：<br>test</em>，表示匹配任何以test开头的内容<br>*test，表示匹配任何以test结尾的内容<br>test，表示匹配任何包含test的内容<br>例如：<br>删除所有以test开头的文件或文件夹</p><p>切记切记 如下命令，请千万千万不要在root管理员用户下执行：<br>rm -rf /<br>rm -rf /*<br>效果等同于在Windows上执行C盘格式化。<br>查找命令(which、find）<br>which命令<br>我们可以通过which命令，查看所使用的一系列命令的程序文件存放在哪里<br>语法： which 要查找的命令</p><p>find命令<br>find命令 - 按文件名查找文件<br>在Linux系统中，我们可以通过find命令去搜索指定的文件。<br>语法：为了确保后续演示，拥有最大的权限，可以在整个系统完成搜索<br>我们可以切换到root用户以获得管理员权限<br>执行命令：<br>su - root<br>然后输入你的密码<br>例如：查找文件名叫做：test的文件，从根目录开始搜索</p><p>find命令 - 通配符<br>被查找文件名，支持使用通配符 * 来做模糊查询。<br>基于通配符的含义，可以结合find命令做文件的模糊查询。<br>查找所有以test开头的文件：find / -name “test*”</p><p>find命令 - 按文件大小查找文件<br>语法：find 起始路径 -size + |-n[KMG]|</p><p>+、- 表示大于和小于<br>n表示大小数字<br>kMG表示大小单位，k(小写字母)表示kb，M表示MB，G表示GB<br>例如：</p><p>查找小于10KB的文件： find / -size -10k<br>查找大于100MB的文件：find / -size +100M<br>grep、wc和管道符<br>grep命令<br>可以通过grep命令，从文件中通过关键字过滤文件行。<br>语法： grep [-n] 关键字 文件路径</p><p>选项-n，可选，表示在结果中显示匹配的行的行号。<br>参数，关键字，必填，表示过滤的关键字，带有空格或其它特殊符号，建议使用””将关键字包围起来<br>参数，文件路径，必填，表示要过滤内容的文件路径，可作为内容输入端口<br>现在，通过touch命令在HOME目录创建itheima.txt，并通过图形化页面编辑并保存如下内容：</p><p>过滤itheima关键字</p><p>过滤itcast关键字</p><p>过滤code关键字，并显示行号</p><p>wc命令做数量统计<br>可以通过wc命令统计文件的行数、单词数量等<br>语法：wc [-c -m -l -w] 文件路径</p><p>选项，-c，统计bytes数量<br>选项，-m，统计字符数量<br>选项，-l，统计行数<br>选项，-w，统计单词数量<br>参数，文件路径，被统计的文件，可作为内容输入端口<br>不带选项，统计文件</p><p>统计字节数<br>统计字符数</p><p>统计行数<br>统计单词数</p><p>管道符<br>学习了grep命令后，我们在来学习一个新的特殊符号，管道符：|<br>管道符的含义是：将管道符左边命令的结果，作为右边命令的输入<br>如上图：</p><p>cat itheima.txt的输出结果（文件内容）<br>作为右边grep命令的输入（被过滤文件）<br>管道符的应用非常多<br>ls | grep Desktop，过滤ls的结果</p><p>find / -name “test” | grep “/usr/lib64”，过滤结果，只找路径带有/usr/lib64的结果</p><p>cat itheima.txt | grep itcast | grep itheima，可以嵌套使用哦</p><p>cat itheima.txt的结果给 grep itcast 使用<br>cat itheima.txt | grep itcast 的结果给 grep itheima使用<br>echo、tail和重定向符<br>echo命令<br>可以使用echo命令在命令行内输出指定内容<br>语法：echo 输出的内容<br>例如：<br>在终端上显示：Hello Linux</p><p>带有空格或\等特殊符号，建议使用双引号包围<br>因为不包围的话，空格后很容易被识别为参数2，尽管echo不受影响，但是要养成习惯哦</p><p>反引号`<br>看一下如下命令：echo pwd</p><p>本意是想，输出当前的工作路径，但是pwd被作为普通字符输出了。</p><p>我们可以通过将命令用反引号（通常也称之为飘号）将其包围 被包围的内容，会被作为命令执行，而非普通字符</p><p>重定向符<br>我们再来学习两个特殊符号，重定向符：&gt;和&gt;&gt;</p><p>使用&gt;将左侧命令的结果，覆盖写入到符号右侧指定的文件中<br>使用&gt;&gt;将左侧命令的结果，追加写入到符号右侧指定的文件中<br>例如：<br>echo “Hello Linux” &gt; itheima.txt<br>echo “Hello itheima” &gt; itheima.txt，再次执行，覆盖新内容</p><p>echo “Hello itcast” &gt;&gt; itheima.txt，再次执行，使用&gt;&gt;追加新内容</p><p>tail持续跟踪文件更改<br>使用-f选项，可以持续跟踪文件更改<br>复制一个新的FinalShell的标签</p><p>在第一个标签中，执行：touch test.txt，创建一个test.txt文件<br>在第一个标签中，执行：tail -f test.txt，持续跟踪文件更改<br>在第二个标签中，多次执行：echo “内容” &gt;&gt; test.txt，向文件追加内容<br>观察第一个标签的变化<br>vi编辑器<br>vi\vim编辑器介绍<br>vi\vim是visual interface的简称, 是Linux中最经典的文本编辑器<br>同图形化界面中的 文本编辑器一样，vi是命令行下对文本文件进行编辑的绝佳选择。<br>vim 是 vi 的加强版本，兼容 vi 的所有指令，不仅能编辑文本，而且还具有 shell 程序编辑的功能，可以不同颜色的字体来辨别语法的正确性，极大方便了程序的设计和编辑性。</p><p>vi\vim编辑器的三种工作模式</p><p>命令模式（Command mode）</p><p>命令模式下，所敲的按键编辑器都理解为命令，以命令驱动执行不同的功能。<br>此模型下，不能自由进行文本编辑。<br>输入模式（Insert mode）</p><p>也就是所谓的编辑模式、插入模式。<br>此模式下，可以对文件内容进行自由编辑。<br>底线命令模式（Last line mode）</p><p>以：开始，通常用于文件的保存、退出。</p><p>命令模式<br>如果需要通过vi/vim编辑器编辑文件，请通过如下命令：<br>vi 文件路径<br>vim 文件路径<br>vim兼容全部的vi功能，后续全部使用vim命令<br>如果文件路径表示的文件不存在，那么此命令会用于编辑新文件<br>如果文件路径表示的文件存在，那么此命令用于编辑已有文件<br>vi编辑器的快速体验<br>通过vi/vim命令编辑文件，会打开一个新的窗口，此时这个窗口就是：命令模式窗口<br>命令模式是vi编辑器的入口和出口，如上图</p><p>进入vi编辑器会进入命令模式<br>通过命令模式输入键盘指令，可以进入输入模式<br>输入模式需要退回到命令模式，然后通过命令可以进入底线命令模式<br>快速体验<br>1.使用：vim hello.txt，编辑一个新文件，执行后进入的是命令模式<br>2.在命令模式内，按键盘 i ，进入输入模式<br>3.在输入模式内输入：itheima and itcast.<br>4.输入完成后，按esc回退会命令模式<br>5.在命令模式内，按键盘 : ，进入底线命令模式<br>6.在底线命令内输入：wq，保存文件并退出vi编辑器</p><p>命令模式快捷键</p><p>底线命令模式快捷键<br>编辑模式没有什么特殊的，进入编辑模式后，任何快捷键都没有作用，就是正常输入文本而已。<br>唯一大家需要记住的，就是：通过esc，可以退回到命令模式中即可。<br>命令模式内，输入: ，即可进入底线命令模式，支持如下命令：</p><p>查看命令帮助和手册<br>如果想要对命令的其它选项进行查阅，可以通过如下方式：</p><p>任何命令都支持：–help 选项， 可以通过这个选项，查看命令的帮助。<br>如：ls --help， 会列出ls命令的帮助文档</p><p>如果想要查看命令的详细手册，可以通过man（manual， 手册）命令查看<br>比如：<br>man ls，就是查看ls命令的详细手册<br>man cd，就是查看cd命令的详细手册<br>大多数手册都是全英文的，如果阅读吃力，可以通过重定向符：man ls &gt; ls-man.txt，输出手册到文件<br>然后通过翻译软件翻译内容查看哦</p>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-基于时空自监督学习的交通流预测ST-SSL模型</title>
      <link href="/2024/06/27/xzy/"/>
      <url>/2024/06/27/xzy/</url>
      
        <content type="html"><![CDATA[<p>研究背景<br>现有的时空相关性方法仍然存在两个关键的局限性：</p><ol><li>大多数模型集中预测所有区域的交通流量，而没有考虑空间异质性，即不同区域的交通流量分布可能存在偏差。如图1(a)中，A和B是北京两个具有不同城市功能的真实区域，住宅区和交通枢纽，从图1(b)中能够观察到它们具有不同的交通流量分布。</li><li>这些模型无法捕捉时变交通模式引起的时间异质性。如图1©工作日和节假日的夜间交通模式可能会有显著差异。<br>![[Pasted image 20240528144841.png]]<br>为了解决这两个局限性：<br>1.本文一种新的时空自监督学习(ST-SSL1)交通预测框架，该框架通过辅助的自监督学习范式，增强了交通模式表征，以反映时空异质性。<br>2.具体来说，ST-SSL构建在一个集成模块上，具有时间和空间卷积，用于跨空间和时间编码信息。<br>3.实现自适应时空自监督学习，本文在属性和结构级别对交通流图数据进行自适应增强，增强流量图的基础上，构建了两个SSL辅助任务，通过时空异构感知增强对主要流量预测任务进行补充。</li></ol><p>#模型框架<br>图2:(a): ST-SSL的总体架构。(b):空间异质性模型。©:时间异质性模型。<br>![[Pasted image 20240528150340.png]]<br>![[Pasted image 20240528150416.png]]<br>（1）时空编码器Spatio-Temporal Encoder：</p><ol><li>提出了一种时空编码器来共同保存交通流图上的ST上下文信息，我们将时间卷积分量与图卷积传播网络相结合，作为时空关系表示的主干。</li><li>建模时间交通模式：具有门控机制的沿时间维度的1D因果卷积<br>![[Pasted image 20240528151348.png]]<br>![[Pasted image 20240528151421.png]]<br>3.捕获区域空间相关性：空间图卷积 (ChebNet)<br>![[Pasted image 20240528151545.png]]<br>![[Pasted image 20240528151554.png]]<br>（2）交通流量图上的自适应图增广 (Adaptive Graph Augmentation on TFG)<br>本文在TFG G = (V, E, A, Xt−T: T)上设计了两阶段的图增强方案，分别是流量级数据增强和图拓扑级结构增强，这两阶段方案根据学习到的异构感知区域依赖关系的流量规律自适应。</li></ol><p>1.区域异质性测量<br>![[Pasted image 20240528152105.png]]<br>![[Pasted image 20240528152120.png]]<br>2.Traffic-level增大<br>![[Pasted image 20240528152227.png]]3.图拓扑级增强<br>![[Pasted image 20240528152347.png]]<br>（3）基于SSL的空间异质性建模<br>![[Pasted image 20240528152843.png]]<br>![[Pasted image 20240528152932.png]]<br>区域聚类的分布正则化<br>![[Pasted image 20240528153002.png]]<br>![[Pasted image 20240528153011.png]]<br>（4）用于时间异质性建模的SSL<br>![[Pasted image 20240528153726.png]]<br>![[Pasted image 20240528155005.png]]<br>#模型训练<br>![[Pasted image 20240528155202.png]]<br>![[Pasted image 20240528155214.png]]<br>#实验<br>实验总结为回答以下研究问题:<br>RQ1:与各种基准相比，ST-SSL的总体流量预测性能如何?RQ2:设计的不同子模块对模型性能的贡献是什么?<br>RQ3:对于异构空间区域和不同时间段，ST-SSL的性能如何?<br>RQ4:增广图和学习表征如何使模型受益?</p><p>数据集：<br>![[Pasted image 20240528160534.png]]<br>交通预测误差可视化。<br>图3显示了ST-SSL和BJTaxi数据集上两个最佳基线的预测误差(|x * n−xn|/xn)，其中像素越亮意味着误差越大。仍然可以看出我们模型的优越性，这与表2的定量结果是一致的。有趣的是，ST-SSL在郊区表现出显著的改善(图3中的绿框)，这证明了在全球相似区域之间传递信息的空间异质性建模的有效性。<br>![[Pasted image 20240528160604.png]]<br>表2给出了各种方法的比较结果。我们用5种不同的种子运行所有深度学习模型，并报告平均性能及其标准差。<br>![[Pasted image 20240528160715.png]]<br>#消融实验</p><ul><li>ST-SSL-sa：随机移除和添加边的方法代替Graph Topology-level Augmentation；</li><li>ST-SSL-ta：随机mask掉交通流量数据的方法代替Traffic-level Augmentation；</li><li>ST-SSL-sh：禁用了空间异质性建模的自监督任务；</li><li>ST-SSL-th：禁用了时间异质性建模的自监督任务。<br>![[Pasted image 20240528161543.png]]<br>结果如图4所示。我们可以观察到ST-SSL优于随机增强的变体表明我们的自适应异构引导数据增强在流量级和图结构级的有效性。此外，ST-SSL始终优于ST-SSL-sh和ST-SSL-th，这证明了联合建模时空异质性的必要性。综上所述，每个设计的子模块都对性能提升有积极的影响。</li></ul><p>（1）ST-SSL的鲁棒性分析<br>(a)空间集群(b)空间表现©时间类别(d)时间业绩<br>不太受欢迎的地区(用黑色圆圈标记)<br>![[Pasted image 20240528164219.png]]<br>对于空间异质性，使用交通流量数据的统计数据（平均值、中值、标准差）对区域进行聚类，结果如图5(a)所示。图5(b)显示了不同聚类的预测性能。</p><p>对于时间异质性，如图5©将一个工作日划分为四个时间段，将一个节假日（包括周末）划分为两个时间段，图5(d)显示了不同时间段的预测性能。</p><p>（2）定性研究<br>图6:自适应图形增强的案例研究。<br>![[Pasted image 20240528164758.png]]<br>在图6中，我们研究了BJTaxi上的异构引导图拓扑级增强。我们的增强方法自适应地去除了具有异构交通模式的相邻区域之间的连接，即左家庄住宅区和三元桥(一个交通枢纽)。同时，在城市潜在功能相似的遥远区域之间建立联系，如西直门大桥和三元大桥，都是交通枢纽。通过这种方式，我们的ST-SSL不仅可以消除低相互关联交通模式的区域连接，还可以捕获全球城市背景下的长期区域依赖关系。</p><p>图7:BJTaxi上嵌入的t-SNE可视化。<br>![[Pasted image 20240528164925.png]]如图7所示，ST-SSL的同类样品更加致密，而不同类别样品的分离效果明显更好。这使得ST-SSL能够意识到空间异质性，并在同一类别的区域之间传递信息，从而促进预测。</p>]]></content>
      
      
      <categories>
          
          <category> 交通预测论文研读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交通预测 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>文章分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>archives</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  /* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url(/font/优设好身体.woff2);  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {  left: -38px;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}body::-webkit-scrollbar {  width: 0;}.neko {  width: 64px;  height: 64px;  background-image: url("https://bu.dusays.com/2022/07/20/62d812db74be9.png");  position: absolute;  right: 32px;  background-repeat: no-repeat;  background-size: contain;  transform: translateX(50%);  cursor: pointer;  font-family: tzy;  font-weight: 600;  font-size: 16px;  color: #6f42c1;  display: none;}.neko::after {  display: none;  width: 100px;  height: 100px;  background-image: url("https://bu.dusays.com/2022/07/20/62d812d95e6f5.png");  background-size: contain;  z-index: 9999;  position: absolute;  right: 50%;  text-align: center;  line-height: 100px;  top: -115%;}.neko.showMsg::after {  content: attr(data-msg);  display: block;  overflow: hidden;  text-overflow: ellipsis;}.neko:hover::after {  content: attr(data-msg);  display: block;  overflow: hidden;  text-overflow: ellipsis;}.neko.fontColor::after {  color: #333;}/*** @description: 滚动条样式  跟猫二选一*/@media screen and (max-width:992px) {  ::-webkit-scrollbar {      width: 8px !important;      height: 8px !important  }  ::-webkit-scrollbar-track {      border-radius: 2em;  }  ::-webkit-scrollbar-thumb {      background-color: rgb(255 255 255 / .3);      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);      border-radius: 2em  }  ::-webkit-scrollbar-corner {      background-color: transparent  }}:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 4px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 7rem;  background: #eaecf2;  border: 1px #e3e8f7;  overflow: hidden}.pace-inactive .pace-progress {  opacity: 0;  transition: .3s ease-in}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: absolute;  z-index: 2000;  display: block;  top: 0;  right: 100%;  height: 100%;  width: 100%;  /* linear-gradient(to right, #3494e6, #ec6ead) */  background: linear-gradient(to right, #43cea2, #3866ca);  animation: gradient 2s ease infinite;  background-size: 200%}.pace.pace-inactive {  opacity: 0;  transition: .3s;  top: -8px}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}/* 头像呼吸灯 */[data-theme="light"] .avatar-img {  animation: huxi_light 4s ease-in-out infinite;}[data-theme="dark"] .avatar-img {  animation: huxi_dark 4s ease-in-out infinite;}@keyframes huxi_light {  0% {    box-shadow: 0px 0px 1px 1px #e9f5fa;  }  50% {    box-shadow: 0px 0px 5px 5px #e9f5fa;  }  100% {    box-shadow: 0px 0px 1px 1px #e9f5fa;  }}@keyframes huxi_dark {  0% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }  50% {    box-shadow: 0px 0px 5px 5px #39c5bb;  }  100% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }}.card-info-avatar .author-status-box {  position: absolute;  bottom: 0;  left: calc(100% - 28px);  width: 28px;  height: 28px;  border: 1px solid #d0d7de;  border-radius: 2em;  background-color: #f8f8f8f8;  transition: 0.4s;  overflow: hidden;}[data-theme="dark"] .card-info-avatar .author-status-box {  background-color: #222222f2;  border: 1px solid #5c6060;}.card-info-avatar .author-status-box .author-status {  display: flex;  align-items: center;  justify-content: center;  height: 28px;  padding: 0 5px;}.card-info-avatar .author-status-box:hover {  width: 105px;}.card-info-avatar .author-status-box:hover .author-status span {  width: 105px;  margin-left: 4px;}.card-info-avatar .author-status-box .author-status span {  width: 0;  font-size: 12px;  height: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  transition: 0.4s;}.card-widget .card-info-avatar {  display: inline-block;  position: relative;}/* 雪花特效 */[data-theme="light"] #snow{  display: block;  position: fixed;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  z-index: -2;}/* 雪花黑夜模式不显示 */[data-theme="dark"] #snow{  display: none;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/snow.js"/>
      <url>/js/snow.js</url>
      
        <content type="html"><![CDATA[if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {    // 移动端不显示} else {    // document.write('<canvas id="snow" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:-2;pointer-events:none"></canvas>');    window && (() => {        let e = {            flakeCount: 50, // 雪花数目            minDist: 150,   // 最小距离            color: "255, 255, 255", // 雪花颜色            size: 1.5,  // 雪花大小            speed: .5,  // 雪花速度            opacity: .7,    // 雪花透明度            stepsize: .5    // 步距        };        const t = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {            window.setTimeout(e, 1e3 / 60)        }            ;        window.requestAnimationFrame = t;        const i = document.getElementById("snow"),            n = i.getContext("2d"),            o = e.flakeCount;        let a = -100,            d = -100,            s = [];        i.width = window.innerWidth,            i.height = window.innerHeight;        const h = () => {            n.clearRect(0, 0, i.width, i.height);            const r = e.minDist;            for (let t = 0; t < o; t++) {                let o = s[t];                const h = a,                    w = d,                    m = o.x,                    c = o.y,                    p = Math.sqrt((h - m) * (h - m) + (w - c) * (w - c));                if (p < r) {                    const e = (h - m) / p,                        t = (w - c) / p,                        i = r / (p * p) / 2;                    o.velX -= i * e,                        o.velY -= i * t                } else                    o.velX *= .98,                        o.velY < o.speed && o.speed - o.velY > .01 && (o.velY += .01 * (o.speed - o.velY)),                        o.velX += Math.cos(o.step += .05) * o.stepSize;                n.fillStyle = "rgba(" + e.color + ", " + o.opacity + ")",                    o.y += o.velY,                    o.x += o.velX,                    (o.y >= i.height || o.y <= 0) && l(o),                    (o.x >= i.width || o.x <= 0) && l(o),                    n.beginPath(),                    n.arc(o.x, o.y, o.size, 0, 2 * Math.PI),                    n.fill()            }            t(h)        }            , l = e => {                e.x = Math.floor(Math.random() * i.width),                    e.y = 0,                    e.size = 3 * Math.random() + 2,                    e.speed = 1 * Math.random() + .5,                    e.velY = e.speed,                    e.velX = 0,                    e.opacity = .5 * Math.random() + .3            }            ;        document.addEventListener("mousemove", (e => {            a = e.clientX,                d = e.clientY        }        )),            window.addEventListener("resize", (() => {                i.width = window.innerWidth,                    i.height = window.innerHeight            }            )),            (() => {                for (let t = 0; t < o; t++) {                    const t = Math.floor(Math.random() * i.width)                        , n = Math.floor(Math.random() * i.height)                        , o = 3 * Math.random() + e.size                        , a = 1 * Math.random() + e.speed                        , d = .5 * Math.random() + e.opacity;                    s.push({                        speed: a,                        velX: 0,                        velY: a,                        x: t,                        y: n,                        size: o,                        stepSize: Math.random() / 30 * e.stepsize,                        step: 0,                        angle: 180,                        opacity: d                    })                }                h()            }            )()    }    )();}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<p>java<br>c<br>c++</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="/notes/index.html"/>
      <url>/notes/index.html</url>
      
        <content type="html"><![CDATA[<p>1.时间线2024-1-1-2024-7.1</p><p>读研心得：<br>2024上半年已悄然过去了，总结一下这学期的收获和不足吧。寒假呢，学术上没有学太多，更多的是对未来的迷茫，迷茫点主要是工作的规划，<br>行路难，行路难，多歧路，今安在？我的道路如何走，真的是一个问题，年龄的焦虑，家庭的压力，学术的无能为力，这些充斥着我的上半年。本来<br>想着深入嵌入式Linux应用或者驱动方面，寒假呢，就简简单单的学了个51。但是，学术的压力也变的很大了，打乱了我的计划。现在的计划就是<br>首先保证自己能够达到毕业条件，这是前提。其次才是，抽空学自己所要学的东西。<br>总结一下自己的缺点：<br>（1）做事优柔寡断，不能专注<br>（2）这学期时间没有安排好，时间规划不想<br>下半年计划：<br>（1）综述修改好<br>（2）实验模型尽快赶出来<br>（3）四级一定过<br>（4）一定掌握Linux基本知识</p><p>白日依山尽，黄河入海流。<br>欲穷千里目，更上一层楼。<br>长风破浪会有时，直挂云帆济沧海。<br>加油！！</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
